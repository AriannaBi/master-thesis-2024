

mod sempl is

   sort Formula Subformula .
   --- subsort Subformula < Formula .

---    defining the operators
   --- ops "a" "b" "c" "d" "e" "f" true false : -> Formula .
   ops s t : -> Formula .
   --- ops s!=0 s!=1 s!=2 s!=3 s!=4 s!=5 s!=6 : -> Formula .


   op F : Formula -> Formula  . ---    eventually
   op X : Formula -> Formula  . ---    neXt
   op ! : Formula -> Formula  . ---    not
   op G : Formula -> Formula . ---    always
   op _&_ : Formula Formula -> Formula . ---    and
   op _|_ : Formula Formula -> Formula . ---    or
   op _U_ : Formula Formula -> Formula . ---    until

   vars M N P : Formula .


   rl [duality1] : !(X(M)) => X(!(M)) .
   rl [duality2] : !(F(M)) => G(!(M)) .
   rl [duality3] : !(G(M)) => F(!(M)) .
   
   rl [idempotency1] : F(F(M)) => F(M) .
   rl [idempotency2] : G(G(M)) => G(M) .
   rl [idempotency3] : (M) U (M U N) => (M) U (N) .
   rl [idempotency4] : (M U N) U (N) => (M) U (N) .

   rl [absorption1] : F(G(F(M))) => G(F(M)) .
   rl [absorption2] : G(F(G(M))) => F(G(M)) .

   rl [distributive1] : X(M U N) => (X(M)) U (X(N)) .
   rl [distributive2] : F(M | N) => F(M) | F(N) .
   rl [distributive3] : G(M & N) => G(M) & G(N) .
   --- rl [distributive4] : X((M) | (N)) => (X(M)) | (X(N)) .
   --- rl [distributive5] : X((M) & (N)) => (X(M)) & (X(N)) .
   --- rl [distributive6] : (P) U ((M) U (N)) => ((P) U (M)) U ((P) U (N)) .





endm


--- load check_semplification.maude 
--- search in sempl : F(G(F(G(s=0)))) =>* M .
--- show path 1 . 